{
  "skills": [
    {
      "category": "Frontend",
      "items": [
        {
          "name": "Next.js",
          "svg": "/skill/NextJS-Light.svg",
          "info": [
            "서버 사이드 렌더링(SSR)을 활용하여 SEO와 성능이 최적화된 웹 페이지를 구현할 수 있습니다.",
            "정적 사이트 생성(SSG)을 통해 빠르게 로드되는 웹사이트를 개발할 수 있습니다.",
            "파일 기반 라우팅과 동적 라우팅을 적용하여 효율적인 웹 애플리케이션을 구축할 수 있습니다."
          ]
        },
        {
          "name": "TypeScript",
          "svg": "/skill/TypeScript.svg",
          "info": [
            "정적 타입을 적용해 버그를 사전에 방지하고 안정적인 코드를 작성할 수 있습니다.",
            "React 프로젝트에서 타입 정의로 컴포넌트와 상태 관리를 더욱 명확하게 할 수 있습니다.",
            "대규모 프로젝트에서 유지보수성과 협업 효율성을 높일 수 있습니다."
          ]
        },
        {
          "name": "React",
          "svg": "/skill/React.svg",
          "info": [
            "컴포넌트 기반의 개발 방식을 통해 UI를 재사용 가능하게 구현할 수 있습니다.",
            "React Hooks를 사용해 상태 관리와 컴포넌트 라이프사이클을 간결하게 처리할 수 있습니다.",
            "Virtual DOM을 활용하여 성능이 최적화된 사용자 경험을 제공합니다."
          ]
        },
        {
          "name": "JavaScript",
          "svg": "/skill/JavaScript.svg",
          "info": [
            "ES6+ 문법을 사용해 효율적이고 읽기 쉬운 코드를 작성할 수 있습니다.",
            "비동기 처리와 이벤트 핸들링을 통해 사용자 인터랙션을 원활하게 구현할 수 있습니다.",
            "DOM 조작과 API 연동을 통해 동적인 웹 페이지를 개발할 수 있습니다."
          ]
        },
        {
          "name": "Redux",
          "svg": "/skill/Redux.svg",
          "info": [
            "전역 상태 관리를 통해 복잡한 애플리케이션의 데이터 흐름을 체계적으로 관리할 수 있습니다.",
            "Redux Toolkit을 활용해 상태 관리 코드를 간결하고 효율적으로 작성할 수 있습니다.",
            "React 프로젝트와 결합하여 확장성과 유지보수성이 뛰어난 애플리케이션을 개발할 수 있습니다."
          ]
        },
        {
          "name": "HTML",
          "svg": "/skill/HTML.svg",
          "info": [
            "시맨틱 마크업을 통해 SEO와 웹 접근성을 고려한 웹페이지를 구현할 수 있습니다.",
            "명확한 웹 페이지 구조를 설계해 코드의 가독성과 유지보수성을 높일 수 있습니다.",
            "표준 준수를 통해 다양한 브라우저 환경에서 호환되는 코드를 작성할 수 있습니다."
          ]
        },
        {
          "name": "CSS",
          "svg": "/skill/CSS.svg",
          "info": [
            "반응형 웹 디자인을 적용해 다양한 화면 크기에 최적화된 레이아웃을 구현할 수 있습니다",
            "애니메이션과 전환 효과를 통해 부드러운 사용자 경험을 개선할 수 있습니다.",
            "Flexbox와 Grid를 활용해 효율적이고 정돈된 스타일링을 제공할 수 있습니다."
          ]
        },
        {
          "name": "Sass",
          "svg": "/skill/Sass.svg",
          "info": [
            "변수와 중첩을 사용해 스타일 코드의 재사용성과 유지보수성을 높일 수 있습니다.",
            "Mixin과 함수 기능을 통해 반복적인 작업을 줄여 생산성을 개선할 수 있습니다.",
            "대규모 프로젝트에서 스타일을 모듈화하고 체계적으로 관리할 수 있습니다."
          ]
        }
      ]
    },
    {
      "category": "Backend",
      "items": [
        {
          "name": "Node.js",
          "svg": "/skill/NodeJS.svg",
          "info": [
            "Express 프레임워크를 사용하여 RESTful API를 설계하고 서버를 구축할 수 있습니다.",
            "비동기 이벤트 기반 시스템을 활용해 확장성이 높은 서버를 개발할 수 있습니다.",
            "데이터베이스 연동을 통해 데이터 CRUD 작업을 수행할 수 있습니다."
          ]
        },
        {
          "name": "Apollo",
          "svg": "/skill/Apollo.svg",
          "info": [
            "GraphQL 서버를 구축하여 효율적인 데이터 요청과 관리를 지원합니다.",
            "캐싱과 데이터 병합을 통해 네트워크 요청 성능을 최적화합니다.",
            "프론트엔드와 백엔드 간 데이터 통신을 효과적으로 설계합니다."
          ]
        },
        {
          "name": "GraphQL",
          "svg": "/skill/GraphQL-Light.svg",
          "info": [
            "GraphQL을 사용해 효율적으로 클라이언트가 필요한 데이터만 제공할 수 있습니다.",
            "API 오버페칭 문제를 해결하고 최적화된 데이터 요청 구조를 구현할 수 있습니다.",
            "단일 엔드포인트로 다양한 클라이언트의 요구를 처리할 수 있습니다."
          ]
        },
        {
          "name": "Firebase",
          "svg": "/skill/Firebase-Light.svg",
          "info": [
            "실시간 데이터베이스를 활용해 사용자 데이터를 빠르게 저장하고 관리할 수 있습니다.",
            "Firebase Authentication을 통해 간편하게 사용자 인증 시스템을 구현할 수 있습니다.",
            "서버리스 백엔드를 활용해 빠르게 프로젝트를 배포할 수 있습니다."
          ]
        },
        {
          "name": "Netlify",
          "svg": "/skill/Netlify-Light.svg",
          "info": [
            "CI/CD 파이프라인을 활용해 신속하고 자동화된 배포 할 수 있습니다..",
            "Jamstack 아키텍처를 적용해 성능과 보안이 강화된 사이트를 배포할 수 있습니다."
          ]
        }
      ]
    },
    {
      "category": "Design",

      "items": [
        {
          "name": "Figma",
          "svg": "/skill/Figma.svg",
          "info": [
            "UI/UX 디자인을 제작하고 프로토타입을 통해 사용자 경험을 시각화할 수 있습니다.",
            "디자인 시스템과 컴포넌트를 활용해 일관된 인터페이스를 구축할 수 있습니다.",
            "팀원들과 실시간 협업을 통해 디자인 피드백과 수정 사항을 빠르게 반영할 수 있습니다."
          ]
        }
      ]
    },
    {
      "category": "Cooperate",

      "items": [
        {
          "name": "GitHub",
          "svg": "/skill/Github-Light.svg",
          "info": [
            "버전 관리를 통해 코드 이력을 관리하고 팀원들과 협업할 수 있습니다.",
            "Pull Request와 코드 리뷰를 통해 코드 품질을 높이고 팀 협업을 효율화합니다."
          ]
        },
        {
          "name": "Discord",
          "svg": "/skill/Discord.svg",
          "info": [
            "실시간 음성 및 채팅을 통해 원활한 소통을 유지합니다.",
            "팀 채널을 분리해 프로젝트 작업을 체계적으로 관리합니다.",
            "화상 회의 및 파일 공유를 통해 협업을 지원합니다."
          ]
        },
        {
          "name": "Slack",
          "svg": "/skill/slack.svg",
          "info": [
            "프로젝트별 채널을 사용해 소통의 효율성을 높이고, 작업 진행 상황을 관리할 수 있습니다.",
            "알림과 외부 서비스 연동을 통해 협업 워크플로우를 자동화 할 수 있습니다."
          ]
        },
        {
          "name": "Notion",
          "svg": "/skill/notion.svg",
          "info": [
            "프로젝트 문서화 및 데이터베이스 관리 도구로 팀 협업을 체계화할 수 있습니다.",
            "작업 관리 보드를 활용해 진행 상황을 한눈에 파악할 수 있습니다."
          ]
        }
      ]
    }
  ]
}
